import random
# 찐계산
def calc_psaj(oca, pres):
    psaj = oca + pres
    if psaj < 40: return "clean"
    if psaj < 60: return "normal"
    return "jjin"

# psa = h, pressure = w
fp = open("e:/data/psa/psa.csv","w",encoding="utf-8")
fp.write("oca,pres,label\r\n")
cnt = {"jjin":0, "normal":0, "clean":0}
for i in range(2000):
    oca = random.randint(25,75)
    pres = random.randint(8,25)
    label = calc_psaj(oca, pres)
    cnt[label] += 1
    fp.write("{0},{1},{2}\r\n".format(oca, pres, label))
fp.close()
print("data completed,", cnt)

from sklearn import svm, metrics
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
import pandas as pd

tbl = pd.read_csv("e:/data/psa/psa.csv")

label = tbl["label"]
pres = tbl["pres"] / 25
oca = tbl["oca"] / 75

wh = pd.concat([oca,pres], axis=1)

data_train, data_test, label_train, label_test = \
    train_test_split(wh, label)

clf = svm.SVC()
clf.fit(data_train, label_train)
predict = clf.predict(data_test)
